{
  "contractName": "PassManager",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_fireAddress",
          "type": "address"
        }
      ],
      "name": "removeOwner",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "addOwner",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "AddOwner",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "fired",
          "type": "address"
        }
      ],
      "name": "RemoveOwner",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "tokenAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "init",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_uportId",
          "type": "uint256"
        }
      ],
      "name": "issue",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x608060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063173825d91461007d5780637065cb48146100c0578063867904b4146101035780638f32d59b146101505780639d76ea581461017f578063e1c7392a146101d6575b600080fd5b34801561008957600080fd5b506100be600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506101ed565b005b3480156100cc57600080fd5b50610101600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061020c565b005b34801561010f57600080fd5b5061014e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061022b565b005b34801561015c57600080fd5b506101656103d0565b604051808215151515815260200191505060405180910390f35b34801561018b57600080fd5b50610194610423565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101e257600080fd5b506101eb61044d565b005b6101f56103d0565b151561020057600080fd5b6102098161050e565b50565b6102146103d0565b151561021f57600080fd5b610228816105ab565b50565b6102336103d0565b151561023e57600080fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515156102ef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f6e6f742079657420696e69742e0000000000000000000000000000000000000081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1983836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b1580156103b457600080fd5b505af11580156103c8573d6000803e3d6000fd5b505050505050565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6104556103d0565b151561046057600080fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156104a757600080fd5b6104af610648565b604051809103906000f0801580156104cb573d6000803e3d6000fd5b50600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167fac6e8398676cf37429d530b81144d7079e99f4fe9d28b0d88c4a749ceccbe8cd60405160405180910390a250565b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167fac1e9ef41b54c676ccf449d83ae6f2624bcdce8f5b93a6b48ce95874c332693d60405160405180910390a250565b60405161218c8061065983390190560060806040523480156200001157600080fd5b506040805190810160405280600d81526020017f456475636174696f6e50617373000000000000000000000000000000000000008152506040805190810160405280600381526020017f4550540000000000000000000000000000000000000000000000000000000000815250620000bb6301ffc9a77c0100000000000000000000000000000000000000000000000000000000026200022d640100000000026401000000009004565b620000f86380ac58cd7c0100000000000000000000000000000000000000000000000000000000026200022d640100000000026401000000009004565b816005908051906020019062000110929190620002eb565b50806006908051906020019062000129929190620002eb565b5062000167635b5e139f7c0100000000000000000000000000000000000000000000000000000000026200022d640100000000026401000000009004565b505033600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36200039a565b63ffffffff7c010000000000000000000000000000000000000000000000000000000002817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141515156200027f57600080fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200032e57805160ff19168380011785556200035f565b828001600101855582156200035f579182015b828111156200035e57825182559160200191906001019062000341565b5b5090506200036e919062000372565b5090565b6200039791905b808211156200039357600081600090555060010162000379565b5090565b90565b611de280620003aa6000396000f30060806040526004361061011d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806301ffc9a71461012257806306fdde0314610186578063081812fc14610216578063095ea7b314610283578063163499c4146102d057806323b872dd146102fb57806340c10f191461036857806342842e0e146103b55780634f558e79146104225780636352211e1461046757806370a08231146104d4578063715018a61461052b5780638da5cb5b146105425780638f32d59b1461059957806395d89b41146105c8578063a22cb46514610658578063a4b8776e146106a7578063b88d4fde146106e8578063c87b56dd1461079b578063e985e9c514610841578063f2fde38b146108bc575b600080fd5b34801561012e57600080fd5b5061016c60048036038101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506108ff565b604051808215151515815260200191505060405180910390f35b34801561019257600080fd5b5061019b610966565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101db5780820151818401526020810190506101c0565b50505050905090810190601f1680156102085780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561022257600080fd5b5061024160048036038101908080359060200190929190505050610a08565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561028f57600080fd5b506102ce600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a59565b005b3480156102dc57600080fd5b506102e5610b9e565b6040518082815260200191505060405180910390f35b34801561030757600080fd5b50610366600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ba6565b005b34801561037457600080fd5b506103b3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c75565b005b3480156103c157600080fd5b50610420600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610eb4565b005b34801561042e57600080fd5b5061044d60048036038101908080359060200190929190505050610ed5565b604051808215151515815260200191505060405180910390f35b34801561047357600080fd5b5061049260048036038101908080359060200190929190505050610ef9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104e057600080fd5b50610515600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f77565b6040518082815260200191505060405180910390f35b34801561053757600080fd5b50610540610ffb565b005b34801561054e57600080fd5b506105576110cf565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105a557600080fd5b506105ae6110f9565b604051808215151515815260200191505060405180910390f35b3480156105d457600080fd5b506105dd611151565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561061d578082015181840152602081019050610602565b50505050905090810190601f16801561064a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561066457600080fd5b506106a5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506111f3565b005b3480156106b357600080fd5b506106d26004803603810190808035906020019092919050505061132f565b6040518082815260200191505060405180910390f35b3480156106f457600080fd5b50610799600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050611347565b005b3480156107a757600080fd5b506107c66004803603810190808035906020019092919050505061136f565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156108065780820151818401526020810190506107eb565b50505050905090810190601f1680156108335780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561084d57600080fd5b506108a2600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611438565b604051808215151515815260200191505060405180910390f35b3480156108c857600080fd5b506108fd600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506114cc565b005b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109fe5780601f106109d3576101008083540402835291602001916109fe565b820191906000526020600020905b8154815290600101906020018083116109e157829003601f168201915b5050505050905090565b6000610a13826114eb565b1515610a1e57600080fd5b6002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610a6482610ef9565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610aa157600080fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610ae15750610ae08133611438565b5b1515610aec57600080fd5b826002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6301e1338081565b610bb0338261155d565b1515610bbb57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610bf757600080fd5b610c0183826115f2565b610c0b83826116f5565b610c158282611824565b808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b610c7d6110f9565b1515610c8857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610d2d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f5f746f206973207a65726f2e000000000000000000000000000000000000000081525060200191505060405180910390fd5b610d36816114eb565b15610e0857610d448161197e565b151515610db9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f74686520746f6b656e206163746976617465207965742e00000000000000000081525060200191505060405180910390fd5b610dc382826116f5565b808273ffffffffffffffffffffffffffffffffffffffff167fa29fc12cda82ff659de006abb10fa5ee256d922af1661e395e5f2fb6b004387e60405160405180910390a35b610e12828261199d565b6301e13380420160096000838152602001908152602001600020819055506002610e3b83610f77565b101515610eb0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f616c726561647920686173206f7468657220746f6b656e2e000000000000000081525060200191505060405180910390fd5b5050565b610ed08383836020604051908101604052806000815250611347565b505050565b6000610ee0826114eb565b8015610ef25750610ef08261197e565b155b9050919050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610f6e57600080fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610fb457600080fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6110036110f9565b151561100e57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b606060068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111e95780601f106111be576101008083540402835291602001916111e9565b820191906000526020600020905b8154815290600101906020018083116111cc57829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561122e57600080fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b60096020528060005260406000206000915090505481565b611352848484610ba6565b61135e84848484611a43565b151561136957600080fd5b50505050565b606061137a826114eb565b151561138557600080fd5b600760008381526020019081526020016000208054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561142c5780601f106114015761010080835404028352916020019161142c565b820191906000526020600020905b81548152906001019060200180831161140f57829003601f168201915b50505050509050919050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6114d46110f9565b15156114df57600080fd5b6114e881611c65565b50565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b60008061156983610ef9565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806115d857508373ffffffffffffffffffffffffffffffffffffffff166115c084610a08565b73ffffffffffffffffffffffffffffffffffffffff16145b806115e957506115e88185611438565b5b91505092915050565b8173ffffffffffffffffffffffffffffffffffffffff1661161282610ef9565b73ffffffffffffffffffffffffffffffffffffffff1614151561163457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156116f15760006002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5050565b8173ffffffffffffffffffffffffffffffffffffffff1661171582610ef9565b73ffffffffffffffffffffffffffffffffffffffff1614151561173757600080fd5b61178a6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d6190919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060006001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561189257600080fd5b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506119376001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d8290919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b6000600960008381526020019081526020016000205442109050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156119d957600080fd5b6119e38282611824565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600080611a658573ffffffffffffffffffffffffffffffffffffffff16611da3565b1515611a745760019150611c5c565b8473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611b69578082015181840152602081019050611b4e565b50505050905090810190601f168015611b965780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015611bb857600080fd5b505af1158015611bcc573d6000803e3d6000fd5b505050506040513d6020811015611be257600080fd5b8101908080519060200190929190505050905063150b7a027c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161491505b50949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611ca157600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080838311151515611d7357600080fd5b82840390508091505092915050565b6000808284019050838110151515611d9957600080fd5b8091505092915050565b600080823b9050600081119150509190505600a165627a7a7230582000a84fce51652c46a6cfca023a51b734820047f3edf85318460bf69de205492b0029a165627a7a72305820f86da818c7cf94a6afee304e6dec0b69ad055358899d0cca5193a5959374c1990029",
  "sourceMap": "304:840:3:-;;;487:26;8:9:-1;5:2;;;30:1;27;20:12;5:2;487:26:3;574:21:2;584:10;574:9;;;:21;;;:::i;:::-;304:840:3;;1184:113:2;1258:4;1237:7;:18;1245:9;1237:18;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;1282:9;1273:19;;;;;;;;;;;;1184:113;:::o;304:840:3:-;;;;;;;",
  "deployedSourceMap": "304:840:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;993:97:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;993:97:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;904:85;;8:9:-1;5:2;;;30:1;27;20:12;5:2;904:85:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;990:152:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;990:152:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;817:83:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;817:83:2;;;;;;;;;;;;;;;;;;;;;;;;;;;517:76:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;517:76:3;;;;;;;;;;;;;;;;;;;;;;;;;;;700:79;;8:9:-1;5:2;;;30:1;27;20:12;5:2;700:79:3;;;;;;993:97:2;715:9;:7;:9::i;:::-;707:18;;;;;;;;1059:26;1072:12;1059;:26::i;:::-;993:97;:::o;904:85::-;715:9;:7;:9::i;:::-;707:18;;;;;;;;964:20;974:9;964;:20::i;:::-;904:85;:::o;990:152:3:-;715:9:2;:7;:9::i;:::-;707:18;;;;;;;;1085:3:3;1075:5;;;;;;;;;;;1067:21;;;;1059:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1112:5;;;;;;;;;;;:10;;;1123:3;1128:8;1112:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1112:25:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1112:25:3;;;;990:152;;:::o;817:83:2:-;857:4;876:7;:19;884:10;876:19;;;;;;;;;;;;;;;;;;;;;;;;;869:26;;817:83;:::o;517:76:3:-;561:7;583:5;;;;;;;;;;;576:12;;517:76;:::o;700:79::-;715:9:2;:7;:9::i;:::-;707:18;;;;;;;;467:3:3;457:5;;;;;;;;;;;449:21;;;441:30;;;;;;;;755:19;;:::i;:::-;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;755:19:3;747:5;;:27;;;;;;;;;;;;;;;;;;700:79::o;1353:129:2:-;1436:5;1412:7;:21;1420:12;1412:21;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;1464:12;1452:25;;;;;;;;;;;;1353:129;:::o;1184:113::-;1258:4;1237:7;:18;1245:9;1237:18;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;1282:9;1273:19;;;;;;;;;;;;1184:113;:::o;304:840:3:-;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.22;\n\n\nimport \"./MultiOwner.sol\";\nimport \"./EducationPass.sol\";\n\n/**\n * @title PassManager\n * @dev The PassManager contract has multi owner address, and a owner be able to issue education-pass.\n * @notice in the first. you must call init functions for create EducationPass Token.\n */\ncontract PassManager is MultiOwner {\n  EducationPass private token;\n\n\n  /**\n   * @dev Throws if inited.\n   */\n  modifier yetInit() {\n    require(address(token) == 0x0);\n    _;\n  }\n\n  constructor() public {\n  }\n\n  function tokenAddress() public view returns(address) {\n    return token;\n  }\n\n  /**\n   * @dev create EducationPass token.\n   * @notice This method can be called by only once.\n   */\n  function init() public onlyOwner yetInit {\n    token = new EducationPass();\n  }\n\n  /**\n   * @dev Issue the EducationPass token.\n   * Wrapping EducationPass.mint so that some owners can issue pass.\n   * @param _to The address of student.\n   * @param _uportId The uportId of student.\n   */\n  function issue(address _to, uint256 _uportId) public onlyOwner {\n    require(address(token) != 0x0, \"not yet init.\");\n    token.mint(_to, _uportId);\n  }\n}\n",
  "sourcePath": "/Users/nakajo/work/hicon2018workshop-4/contracts/PassManager.sol",
  "ast": {
    "absolutePath": "/Users/nakajo/work/hicon2018workshop-4/contracts/PassManager.sol",
    "exportedSymbols": {
      "PassManager": [
        357
      ]
    },
    "id": 358,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 286,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".22"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "absolutePath": "/Users/nakajo/work/hicon2018workshop-4/contracts/MultiOwner.sol",
        "file": "./MultiOwner.sol",
        "id": 287,
        "nodeType": "ImportDirective",
        "scope": 358,
        "sourceUnit": 285,
        "src": "27:26:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/nakajo/work/hicon2018workshop-4/contracts/EducationPass.sol",
        "file": "./EducationPass.sol",
        "id": 288,
        "nodeType": "ImportDirective",
        "scope": 358,
        "sourceUnit": 128,
        "src": "54:29:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 289,
              "name": "MultiOwner",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 284,
              "src": "328:10:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MultiOwner_$284",
                "typeString": "contract MultiOwner"
              }
            },
            "id": 290,
            "nodeType": "InheritanceSpecifier",
            "src": "328:10:3"
          }
        ],
        "contractDependencies": [
          127,
          284
        ],
        "contractKind": "contract",
        "documentation": "@title PassManager\n@dev The PassManager contract has multi owner address, and a owner be able to issue education-pass.\n@notice in the first. you must call init functions for create EducationPass Token.",
        "fullyImplemented": true,
        "id": 357,
        "linearizedBaseContracts": [
          357,
          284
        ],
        "name": "PassManager",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 292,
            "name": "token",
            "nodeType": "VariableDeclaration",
            "scope": 357,
            "src": "343:27:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_EducationPass_$127",
              "typeString": "contract EducationPass"
            },
            "typeName": {
              "contractScope": null,
              "id": 291,
              "name": "EducationPass",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 127,
              "src": "343:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EducationPass_$127",
                "typeString": "contract EducationPass"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 303,
              "nodeType": "Block",
              "src": "435:48:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 296,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 292,
                              "src": "457:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_EducationPass_$127",
                                "typeString": "contract EducationPass"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_EducationPass_$127",
                                "typeString": "contract EducationPass"
                              }
                            ],
                            "id": 295,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "449:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "449:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "307830",
                          "id": 298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "467:3:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x0"
                        },
                        "src": "449:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 294,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1506,
                        1507
                      ],
                      "referencedDeclaration": 1506,
                      "src": "441:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "441:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 301,
                  "nodeType": "ExpressionStatement",
                  "src": "441:30:3"
                },
                {
                  "id": 302,
                  "nodeType": "PlaceholderStatement",
                  "src": "477:1:3"
                }
              ]
            },
            "documentation": "@dev Throws if inited.",
            "id": 304,
            "name": "yetInit",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 293,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "432:2:3"
            },
            "src": "416:67:3",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 307,
              "nodeType": "Block",
              "src": "508:5:3",
              "statements": []
            },
            "documentation": null,
            "id": 308,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 305,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "498:2:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 306,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "508:0:3"
            },
            "scope": 357,
            "src": "487:26:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 315,
              "nodeType": "Block",
              "src": "570:23:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 313,
                    "name": "token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 292,
                    "src": "583:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_EducationPass_$127",
                      "typeString": "contract EducationPass"
                    }
                  },
                  "functionReturnParameters": 312,
                  "id": 314,
                  "nodeType": "Return",
                  "src": "576:12:3"
                }
              ]
            },
            "documentation": null,
            "id": 316,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "tokenAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 309,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "538:2:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 312,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 311,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 316,
                  "src": "561:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 310,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "561:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "560:9:3"
            },
            "scope": 357,
            "src": "517:76:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 329,
              "nodeType": "Block",
              "src": "741:38:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 323,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 292,
                      "src": "747:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_EducationPass_$127",
                        "typeString": "contract EducationPass"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "755:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_EducationPass_$127_$",
                          "typeString": "function () returns (contract EducationPass)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 324,
                          "name": "EducationPass",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 127,
                          "src": "759:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_EducationPass_$127",
                            "typeString": "contract EducationPass"
                          }
                        }
                      },
                      "id": 326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "755:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_EducationPass_$127",
                        "typeString": "contract EducationPass"
                      }
                    },
                    "src": "747:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_EducationPass_$127",
                      "typeString": "contract EducationPass"
                    }
                  },
                  "id": 328,
                  "nodeType": "ExpressionStatement",
                  "src": "747:27:3"
                }
              ]
            },
            "documentation": "@dev create EducationPass token.\n@notice This method can be called by only once.",
            "id": 330,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 319,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 318,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 216,
                  "src": "723:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "723:9:3"
              },
              {
                "arguments": null,
                "id": 321,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 320,
                  "name": "yetInit",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 304,
                  "src": "733:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "733:7:3"
              }
            ],
            "name": "init",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 317,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "713:2:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 322,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "741:0:3"
            },
            "scope": 357,
            "src": "700:79:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 355,
              "nodeType": "Block",
              "src": "1053:89:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 341,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 292,
                              "src": "1075:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_EducationPass_$127",
                                "typeString": "contract EducationPass"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_EducationPass_$127",
                                "typeString": "contract EducationPass"
                              }
                            ],
                            "id": 340,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1067:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1067:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "307830",
                          "id": 343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1085:3:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x0"
                        },
                        "src": "1067:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f742079657420696e69742e",
                        "id": 345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1090:15:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f303877ca19d4e8648f2c84337cd624d92c557fcf723cfdd54a7a2ddb16f1073",
                          "typeString": "literal_string \"not yet init.\""
                        },
                        "value": "not yet init."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f303877ca19d4e8648f2c84337cd624d92c557fcf723cfdd54a7a2ddb16f1073",
                          "typeString": "literal_string \"not yet init.\""
                        }
                      ],
                      "id": 339,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1506,
                        1507
                      ],
                      "referencedDeclaration": 1507,
                      "src": "1059:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1059:47:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 347,
                  "nodeType": "ExpressionStatement",
                  "src": "1059:47:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 351,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 332,
                        "src": "1123:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 352,
                        "name": "_uportId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 334,
                        "src": "1128:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 348,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 292,
                        "src": "1112:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_EducationPass_$127",
                          "typeString": "contract EducationPass"
                        }
                      },
                      "id": 350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 95,
                      "src": "1112:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1112:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 354,
                  "nodeType": "ExpressionStatement",
                  "src": "1112:25:3"
                }
              ]
            },
            "documentation": "@dev Issue the EducationPass token.\nWrapping EducationPass.mint so that some owners can issue pass.\n@param _to The address of student.\n@param _uportId The uportId of student.",
            "id": 356,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 337,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 336,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 216,
                  "src": "1043:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1043:9:3"
              }
            ],
            "name": "issue",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 335,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 332,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 356,
                  "src": "1005:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 331,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1005:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 334,
                  "name": "_uportId",
                  "nodeType": "VariableDeclaration",
                  "scope": 356,
                  "src": "1018:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 333,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1018:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1004:31:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 338,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1053:0:3"
            },
            "scope": 357,
            "src": "990:152:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 358,
        "src": "304:840:3"
      }
    ],
    "src": "0:1145:3"
  },
  "legacyAST": {
    "absolutePath": "/Users/nakajo/work/hicon2018workshop-4/contracts/PassManager.sol",
    "exportedSymbols": {
      "PassManager": [
        357
      ]
    },
    "id": 358,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 286,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".22"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "absolutePath": "/Users/nakajo/work/hicon2018workshop-4/contracts/MultiOwner.sol",
        "file": "./MultiOwner.sol",
        "id": 287,
        "nodeType": "ImportDirective",
        "scope": 358,
        "sourceUnit": 285,
        "src": "27:26:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/nakajo/work/hicon2018workshop-4/contracts/EducationPass.sol",
        "file": "./EducationPass.sol",
        "id": 288,
        "nodeType": "ImportDirective",
        "scope": 358,
        "sourceUnit": 128,
        "src": "54:29:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 289,
              "name": "MultiOwner",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 284,
              "src": "328:10:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MultiOwner_$284",
                "typeString": "contract MultiOwner"
              }
            },
            "id": 290,
            "nodeType": "InheritanceSpecifier",
            "src": "328:10:3"
          }
        ],
        "contractDependencies": [
          127,
          284
        ],
        "contractKind": "contract",
        "documentation": "@title PassManager\n@dev The PassManager contract has multi owner address, and a owner be able to issue education-pass.\n@notice in the first. you must call init functions for create EducationPass Token.",
        "fullyImplemented": true,
        "id": 357,
        "linearizedBaseContracts": [
          357,
          284
        ],
        "name": "PassManager",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 292,
            "name": "token",
            "nodeType": "VariableDeclaration",
            "scope": 357,
            "src": "343:27:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_EducationPass_$127",
              "typeString": "contract EducationPass"
            },
            "typeName": {
              "contractScope": null,
              "id": 291,
              "name": "EducationPass",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 127,
              "src": "343:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EducationPass_$127",
                "typeString": "contract EducationPass"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 303,
              "nodeType": "Block",
              "src": "435:48:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 296,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 292,
                              "src": "457:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_EducationPass_$127",
                                "typeString": "contract EducationPass"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_EducationPass_$127",
                                "typeString": "contract EducationPass"
                              }
                            ],
                            "id": 295,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "449:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "449:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "307830",
                          "id": 298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "467:3:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x0"
                        },
                        "src": "449:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 294,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1506,
                        1507
                      ],
                      "referencedDeclaration": 1506,
                      "src": "441:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "441:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 301,
                  "nodeType": "ExpressionStatement",
                  "src": "441:30:3"
                },
                {
                  "id": 302,
                  "nodeType": "PlaceholderStatement",
                  "src": "477:1:3"
                }
              ]
            },
            "documentation": "@dev Throws if inited.",
            "id": 304,
            "name": "yetInit",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 293,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "432:2:3"
            },
            "src": "416:67:3",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 307,
              "nodeType": "Block",
              "src": "508:5:3",
              "statements": []
            },
            "documentation": null,
            "id": 308,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 305,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "498:2:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 306,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "508:0:3"
            },
            "scope": 357,
            "src": "487:26:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 315,
              "nodeType": "Block",
              "src": "570:23:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 313,
                    "name": "token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 292,
                    "src": "583:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_EducationPass_$127",
                      "typeString": "contract EducationPass"
                    }
                  },
                  "functionReturnParameters": 312,
                  "id": 314,
                  "nodeType": "Return",
                  "src": "576:12:3"
                }
              ]
            },
            "documentation": null,
            "id": 316,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "tokenAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 309,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "538:2:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 312,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 311,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 316,
                  "src": "561:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 310,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "561:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "560:9:3"
            },
            "scope": 357,
            "src": "517:76:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 329,
              "nodeType": "Block",
              "src": "741:38:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 323,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 292,
                      "src": "747:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_EducationPass_$127",
                        "typeString": "contract EducationPass"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "755:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_EducationPass_$127_$",
                          "typeString": "function () returns (contract EducationPass)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 324,
                          "name": "EducationPass",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 127,
                          "src": "759:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_EducationPass_$127",
                            "typeString": "contract EducationPass"
                          }
                        }
                      },
                      "id": 326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "755:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_EducationPass_$127",
                        "typeString": "contract EducationPass"
                      }
                    },
                    "src": "747:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_EducationPass_$127",
                      "typeString": "contract EducationPass"
                    }
                  },
                  "id": 328,
                  "nodeType": "ExpressionStatement",
                  "src": "747:27:3"
                }
              ]
            },
            "documentation": "@dev create EducationPass token.\n@notice This method can be called by only once.",
            "id": 330,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 319,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 318,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 216,
                  "src": "723:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "723:9:3"
              },
              {
                "arguments": null,
                "id": 321,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 320,
                  "name": "yetInit",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 304,
                  "src": "733:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "733:7:3"
              }
            ],
            "name": "init",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 317,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "713:2:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 322,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "741:0:3"
            },
            "scope": 357,
            "src": "700:79:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 355,
              "nodeType": "Block",
              "src": "1053:89:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 341,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 292,
                              "src": "1075:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_EducationPass_$127",
                                "typeString": "contract EducationPass"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_EducationPass_$127",
                                "typeString": "contract EducationPass"
                              }
                            ],
                            "id": 340,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1067:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1067:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "307830",
                          "id": 343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1085:3:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x0"
                        },
                        "src": "1067:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f742079657420696e69742e",
                        "id": 345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1090:15:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f303877ca19d4e8648f2c84337cd624d92c557fcf723cfdd54a7a2ddb16f1073",
                          "typeString": "literal_string \"not yet init.\""
                        },
                        "value": "not yet init."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f303877ca19d4e8648f2c84337cd624d92c557fcf723cfdd54a7a2ddb16f1073",
                          "typeString": "literal_string \"not yet init.\""
                        }
                      ],
                      "id": 339,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1506,
                        1507
                      ],
                      "referencedDeclaration": 1507,
                      "src": "1059:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1059:47:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 347,
                  "nodeType": "ExpressionStatement",
                  "src": "1059:47:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 351,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 332,
                        "src": "1123:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 352,
                        "name": "_uportId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 334,
                        "src": "1128:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 348,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 292,
                        "src": "1112:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_EducationPass_$127",
                          "typeString": "contract EducationPass"
                        }
                      },
                      "id": 350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 95,
                      "src": "1112:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1112:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 354,
                  "nodeType": "ExpressionStatement",
                  "src": "1112:25:3"
                }
              ]
            },
            "documentation": "@dev Issue the EducationPass token.\nWrapping EducationPass.mint so that some owners can issue pass.\n@param _to The address of student.\n@param _uportId The uportId of student.",
            "id": 356,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 337,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 336,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 216,
                  "src": "1043:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1043:9:3"
              }
            ],
            "name": "issue",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 335,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 332,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 356,
                  "src": "1005:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 331,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1005:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 334,
                  "name": "_uportId",
                  "nodeType": "VariableDeclaration",
                  "scope": 356,
                  "src": "1018:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 333,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1018:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1004:31:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 338,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1053:0:3"
            },
            "scope": 357,
            "src": "990:152:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 358,
        "src": "304:840:3"
      }
    ],
    "src": "0:1145:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-11-11T03:14:52.180Z"
}